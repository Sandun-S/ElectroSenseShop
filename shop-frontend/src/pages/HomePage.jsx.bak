import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { CpuChipIcon, TagIcon, SparklesIcon, InboxIcon } from '@heroicons/react/24/outline';
// --- FIX: Added file extensions to imports ---
import ProductCard from '../components/ProductCard.jsx';
import { useProducts } from '../hooks/useProducts.js'; 
import { db } from '../firebaseConfig.js';
import { collection, getDocs } from 'firebase/firestore';

export default function HomePage() {
  const [categories, setCategories] = useState([]);
  
  // --- FIX: Call the hook correctly by passing an object ---
  // We pass null for category/search to fetch all products
  const { products: featured, loading, error } = useProducts({ 
    category: null, 
    searchQuery: null 
  });

  useEffect(() => {
    // This logic for categories is fine, it can stay.
    // You can replace this with a real Firestore fetch later.
    setCategories([
      { name: 'Microcontrollers', icon: CpuChipIcon, link: '/products?category=Microcontrollers' },
      { name: 'Sensors', icon: TagIcon, link: '/products?category=Sensors' },
      { name: 'Components', icon: SparklesIcon, link: '/products?category=Components' },
      { name: 'All Products', icon: InboxIcon, link: '/products' },
    ]);
    
    // The product fetching is now handled by our useProducts hook,
    // so the old fetchFeatured function is no longer needed here.
  }, []);

  return (
    <div className="space-y-12">
      {/* Hero Section */}
      <section className="bg-teal-600 text-white rounded-lg p-12 flex items-center justify-between shadow-lg">
        <div>
          <h1 className="text-4xl font-bold mb-4">Build Your Next Big Idea</h1>
          <p className="text-lg text-teal-100 mb-6">High-quality, affordable electronics for makers and professionals.</p>
          <Link to="/products" className="bg-white text-teal-600 font-bold py-3 px-6 rounded-md hover:bg-gray-100 transition">
            Shop All Products
          </Link>
        </div>
        <div className="hidden md:block">
          <CpuChipIcon className="h-40 w-40 text-teal-300 opacity-50" />
        </div>
      </section>

      {/* Category Grid (duino.lk style) */}
      <section>
        <h2 className="text-2xl font-semibold text-gray-800 mb-6 text-center">Shop by Category</h2>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
          {categories.map((cat) => (
            <Link key={cat.name} to={cat.link} className="group block p-6 bg-white rounded-lg shadow-md text-center hover:shadow-xl hover:scale-105 transition">
              <cat.icon className="h-12 w-12 text-teal-600 mx-auto mb-4" />
              <h3 className="text-lg font-semibold text-gray-700 group-hover:text-teal-600">{cat.name}</h3>
            </Link>
          ))}
        </div>
      </section>

      {/* Featured Products */}
      <section>
        <h2 className="text-2xl font-semibold text-gray-800 mb-6">Featured Products</h2>
        {loading && (
          <div className="flex justify-center items-center py-10">
            <div className="w-12 h-12 border-4 border-dashed rounded-full animate-spin border-teal-600"></div>
          </div>
        )}
        
        {error && (
          <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
            <strong className="font-bold">Error:</strong>
            <span className="block sm:inline"> {error.message}</span>
          </div>
        )}

        {!loading && !error && (
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {featured.length > 0 ? (
              featured.map(product => <ProductCard key={product.id} product={product} />)
            ) : (
              <p>No featured products found.</p>
            )}
          </div>
        )}
      </section>
    </div>
  );
}


