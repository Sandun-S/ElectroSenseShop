import { create } from 'zustand';
import { persist } from 'zustand/middleware';

// Define the store
export const useCartStore = create(
  persist(
    (set, get) => ({
      cart: [],
      
      // Add an item to the cart
      addToCart: (product) => {
        const cart = get().cart;
        const itemInCart = cart.find((item) => item.id === product.id);

        if (itemInCart) {
          // If item exists, increase quantity
          set((state) => ({
            cart: state.cart.map((item) =>
              item.id === product.id
                ? { ...item, quantity: item.quantity + 1 }
                : item
            ),
          }));
        } else {
          // If item doesn't exist, add it with quantity 1
          set((state) => ({
            cart: [...state.cart, { ...product, quantity: 1 }],
          }));
        }
      },

      // Remove an item from the cart
      removeFromCart: (productId) => {
        set((state) => ({
          cart: state.cart.filter((item) => item.id !== productId),
        }));
      },

      // Update quantity of an item
      updateQuantity: (productId, quantity) => {
        const newQuantity = parseInt(quantity, 10);
        if (newQuantity < 1) {
          // If quantity is less than 1, remove it
          get().removeFromCart(productId);
        } else {
          set((state) => ({
            cart: state.cart.map((item) =>
              item.id === productId
                ? { ...item, quantity: newQuantity }
                : item
            ),
          }));
        }
      },

      // Clear the entire cart
      clearCart: () => {
        set({ cart: [] });
      },

      // Getter for total items count
      getTotalItems: () => {
        return get().cart.reduce((total, item) => total + item.quantity, 0);
      },

      // Getter for total price
      getTotalPrice: () => {
        return get().cart.reduce((total, item) => total + item.price * item.quantity, 0);
      },
    }),
    {
      name: 'electrosense-cart-storage', // name of item in local storage
    }
  )
);
